# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AWK = @AWK@
CC = @CC@
DEPDIR = @DEPDIR@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
PACKAGE = @PACKAGE@
STRIP = @STRIP@
VERSION = @VERSION@
YACC = @YACC@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@

# These sources are built automatically (by lex and yacc)
BUILT_SOURCES = newick_parser.h newick_scanner.c newick_parser.c \
		address_scanner.c address_parser.c


bin_PROGRAMS = nw_indent nw_display nw_clade nw_reroot nw_rename \
	       nw_condense nw_support nw_ed nw_topology nw_distance \
	       nw_labels nw_prune nw_order nw_match nw_gen


# All headers
HDR = canvas.h concat.h enode.h hash.h lca.h link.h list.h nodemap.h \
	node_pos_alloc.h node_set.h parser.h readline.h redge.h rnode.h \
	rnode_iterator.h simple_node_pos.h svg_graph.h text_graph.h \
	to_newick.h tree.h tree_editor_rnode_data.h common.h order_tree.h


# I mention all headers here, so they're included in the distro (otherwise this
# is not necessary, it builds just fine)
NW_CORE = newick_parser.y newick_scanner.l rnode.c list.c parser.c \
	  link.c tree.c redge.c nodemap.c hash.c $(HDR)


NW_OUT = to_newick.c concat.c

AM_YFLAGS = -d

nw_display_SOURCES = $(NW_CORE) display.c canvas.c text_graph.c \
		simple_node_pos.c svg_graph.c readline.c lca.c \
		node_pos_alloc.c

nw_display_LDADD = @LEXLIB@ -lm

nw_clade_SOURCES = $(NW_CORE) $(NW_OUT) subtree.c lca.c rnode_iterator.c
nw_clade_LDADD = @LEXLIB@ 

nw_reroot_SOURCES = $(NW_CORE) $(NW_OUT) reroot.c lca.c
nw_reroot_LDADD = @LEXLIB@

nw_rename_SOURCES = $(NW_CORE) $(NW_OUT) rename.c readline.c
nw_rename_LDADD = @LEXLIB@

nw_condense_SOURCES = $(NW_CORE) $(NW_OUT) condense.c
nw_condense_LDADD = @LEXLIB@

nw_support_SOURCES = $(NW_CORE) $(NW_OUT) support.c node_set.c
nw_support_LDADD = @LEXLIB@

nw_ed_SOURCES = $(NW_CORE) $(NW_OUT) address_scanner.l address_parser.y \
	tree_editor.c enode.c

nw_ed_LDADD = @LEXLIB@ -lm

nw_topology_SOURCES = $(NW_CORE) $(NW_OUT) topology.c
nw_topology_LDADD = @LEXLIB@

nw_distance_SOURCES = $(NW_CORE) distance.c simple_node_pos.c lca.c \
		      node_pos_alloc.c

nw_distance_LDADD = @LEXLIB@

nw_labels_SOURCES = $(NW_CORE) labels.c 
nw_labels_LDADD = @LEXLIB@

nw_prune_SOURCES = $(NW_CORE) $(NW_OUT) prune.c 
nw_prune_LDADD = @LEXLIB@

nw_order_SOURCES = $(NW_CORE) $(NW_OUT) order.c order_tree.c
nw_order_LDADD = @LEXLIB@

nw_indent_SOURCES = indent.c indent_lex.l
nw_indent_LDADD = @LEXLIB@

nw_match_SOURCES = match.c $(NW_CORE) $(NW_OUT) order_tree.c
nw_match_LDADD = @LEXLIB@

nw_gen_SOURCES = generate.c $(NW_CORE) $(NW_OUT)
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = nw_indent$(EXEEXT) nw_display$(EXEEXT) nw_clade$(EXEEXT) \
	nw_reroot$(EXEEXT) nw_rename$(EXEEXT) nw_condense$(EXEEXT) \
	nw_support$(EXEEXT) nw_ed$(EXEEXT) nw_topology$(EXEEXT) \
	nw_distance$(EXEEXT) nw_labels$(EXEEXT) nw_prune$(EXEEXT) \
	nw_order$(EXEEXT) nw_match$(EXEEXT) nw_gen$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am__objects_1 =
am__objects_2 = newick_parser.$(OBJEXT) newick_scanner.$(OBJEXT) \
	rnode.$(OBJEXT) list.$(OBJEXT) parser.$(OBJEXT) link.$(OBJEXT) \
	tree.$(OBJEXT) redge.$(OBJEXT) nodemap.$(OBJEXT) hash.$(OBJEXT) \
	$(am__objects_1)
am__objects_3 = to_newick.$(OBJEXT) concat.$(OBJEXT)
am_nw_clade_OBJECTS = $(am__objects_2) $(am__objects_3) \
	subtree.$(OBJEXT) lca.$(OBJEXT) rnode_iterator.$(OBJEXT)
nw_clade_OBJECTS = $(am_nw_clade_OBJECTS)
nw_clade_DEPENDENCIES =
nw_clade_LDFLAGS =
am_nw_condense_OBJECTS = $(am__objects_2) $(am__objects_3) \
	condense.$(OBJEXT)
nw_condense_OBJECTS = $(am_nw_condense_OBJECTS)
nw_condense_DEPENDENCIES =
nw_condense_LDFLAGS =
am_nw_display_OBJECTS = $(am__objects_2) display.$(OBJEXT) \
	canvas.$(OBJEXT) text_graph.$(OBJEXT) simple_node_pos.$(OBJEXT) \
	svg_graph.$(OBJEXT) readline.$(OBJEXT) lca.$(OBJEXT) \
	node_pos_alloc.$(OBJEXT)
nw_display_OBJECTS = $(am_nw_display_OBJECTS)
nw_display_DEPENDENCIES =
nw_display_LDFLAGS =
am_nw_distance_OBJECTS = $(am__objects_2) distance.$(OBJEXT) \
	simple_node_pos.$(OBJEXT) lca.$(OBJEXT) \
	node_pos_alloc.$(OBJEXT)
nw_distance_OBJECTS = $(am_nw_distance_OBJECTS)
nw_distance_DEPENDENCIES =
nw_distance_LDFLAGS =
am_nw_ed_OBJECTS = $(am__objects_2) $(am__objects_3) \
	address_scanner.$(OBJEXT) address_parser.$(OBJEXT) \
	tree_editor.$(OBJEXT) enode.$(OBJEXT)
nw_ed_OBJECTS = $(am_nw_ed_OBJECTS)
nw_ed_DEPENDENCIES =
nw_ed_LDFLAGS =
am_nw_gen_OBJECTS = generate.$(OBJEXT) $(am__objects_2) $(am__objects_3)
nw_gen_OBJECTS = $(am_nw_gen_OBJECTS)
nw_gen_LDADD = $(LDADD)
nw_gen_DEPENDENCIES =
nw_gen_LDFLAGS =
am_nw_indent_OBJECTS = indent.$(OBJEXT) indent_lex.$(OBJEXT)
nw_indent_OBJECTS = $(am_nw_indent_OBJECTS)
nw_indent_DEPENDENCIES =
nw_indent_LDFLAGS =
am_nw_labels_OBJECTS = $(am__objects_2) labels.$(OBJEXT)
nw_labels_OBJECTS = $(am_nw_labels_OBJECTS)
nw_labels_DEPENDENCIES =
nw_labels_LDFLAGS =
am_nw_match_OBJECTS = match.$(OBJEXT) $(am__objects_2) $(am__objects_3) \
	order_tree.$(OBJEXT)
nw_match_OBJECTS = $(am_nw_match_OBJECTS)
nw_match_DEPENDENCIES =
nw_match_LDFLAGS =
am_nw_order_OBJECTS = $(am__objects_2) $(am__objects_3) order.$(OBJEXT) \
	order_tree.$(OBJEXT)
nw_order_OBJECTS = $(am_nw_order_OBJECTS)
nw_order_DEPENDENCIES =
nw_order_LDFLAGS =
am_nw_prune_OBJECTS = $(am__objects_2) $(am__objects_3) prune.$(OBJEXT)
nw_prune_OBJECTS = $(am_nw_prune_OBJECTS)
nw_prune_DEPENDENCIES =
nw_prune_LDFLAGS =
am_nw_rename_OBJECTS = $(am__objects_2) $(am__objects_3) \
	rename.$(OBJEXT) readline.$(OBJEXT)
nw_rename_OBJECTS = $(am_nw_rename_OBJECTS)
nw_rename_DEPENDENCIES =
nw_rename_LDFLAGS =
am_nw_reroot_OBJECTS = $(am__objects_2) $(am__objects_3) \
	reroot.$(OBJEXT) lca.$(OBJEXT)
nw_reroot_OBJECTS = $(am_nw_reroot_OBJECTS)
nw_reroot_DEPENDENCIES =
nw_reroot_LDFLAGS =
am_nw_support_OBJECTS = $(am__objects_2) $(am__objects_3) \
	support.$(OBJEXT) node_set.$(OBJEXT)
nw_support_OBJECTS = $(am_nw_support_OBJECTS)
nw_support_DEPENDENCIES =
nw_support_LDFLAGS =
am_nw_topology_OBJECTS = $(am__objects_2) $(am__objects_3) \
	topology.$(OBJEXT)
nw_topology_OBJECTS = $(am_nw_topology_OBJECTS)
nw_topology_DEPENDENCIES =
nw_topology_LDFLAGS =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/address_parser.Po \
@AMDEP_TRUE@	./$(DEPDIR)/address_scanner.Po \
@AMDEP_TRUE@	./$(DEPDIR)/canvas.Po ./$(DEPDIR)/concat.Po \
@AMDEP_TRUE@	./$(DEPDIR)/condense.Po ./$(DEPDIR)/display.Po \
@AMDEP_TRUE@	./$(DEPDIR)/distance.Po ./$(DEPDIR)/enode.Po \
@AMDEP_TRUE@	./$(DEPDIR)/generate.Po ./$(DEPDIR)/hash.Po \
@AMDEP_TRUE@	./$(DEPDIR)/indent.Po ./$(DEPDIR)/indent_lex.Po \
@AMDEP_TRUE@	./$(DEPDIR)/labels.Po ./$(DEPDIR)/lca.Po \
@AMDEP_TRUE@	./$(DEPDIR)/link.Po ./$(DEPDIR)/list.Po \
@AMDEP_TRUE@	./$(DEPDIR)/match.Po ./$(DEPDIR)/newick_parser.Po \
@AMDEP_TRUE@	./$(DEPDIR)/newick_scanner.Po \
@AMDEP_TRUE@	./$(DEPDIR)/node_pos_alloc.Po \
@AMDEP_TRUE@	./$(DEPDIR)/node_set.Po ./$(DEPDIR)/nodemap.Po \
@AMDEP_TRUE@	./$(DEPDIR)/order.Po ./$(DEPDIR)/order_tree.Po \
@AMDEP_TRUE@	./$(DEPDIR)/parser.Po ./$(DEPDIR)/prune.Po \
@AMDEP_TRUE@	./$(DEPDIR)/readline.Po ./$(DEPDIR)/redge.Po \
@AMDEP_TRUE@	./$(DEPDIR)/rename.Po ./$(DEPDIR)/reroot.Po \
@AMDEP_TRUE@	./$(DEPDIR)/rnode.Po ./$(DEPDIR)/rnode_iterator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/simple_node_pos.Po \
@AMDEP_TRUE@	./$(DEPDIR)/subtree.Po ./$(DEPDIR)/support.Po \
@AMDEP_TRUE@	./$(DEPDIR)/svg_graph.Po ./$(DEPDIR)/text_graph.Po \
@AMDEP_TRUE@	./$(DEPDIR)/to_newick.Po ./$(DEPDIR)/topology.Po \
@AMDEP_TRUE@	./$(DEPDIR)/tree.Po ./$(DEPDIR)/tree_editor.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
LEXCOMPILE = $(LEX) $(LFLAGS) $(AM_LFLAGS)
YLWRAP = $(top_srcdir)/ylwrap
YACCCOMPILE = $(YACC) $(YFLAGS) $(AM_YFLAGS)
DIST_SOURCES = $(nw_clade_SOURCES) $(nw_condense_SOURCES) \
	$(nw_display_SOURCES) $(nw_distance_SOURCES) $(nw_ed_SOURCES) \
	$(nw_gen_SOURCES) $(nw_indent_SOURCES) $(nw_labels_SOURCES) \
	$(nw_match_SOURCES) $(nw_order_SOURCES) $(nw_prune_SOURCES) \
	$(nw_rename_SOURCES) $(nw_reroot_SOURCES) $(nw_support_SOURCES) \
	$(nw_topology_SOURCES)
DIST_COMMON = Makefile.am Makefile.in address_parser.c address_parser.h \
	address_scanner.c indent_lex.c newick_parser.c newick_parser.h \
	newick_scanner.c
SOURCES = $(nw_clade_SOURCES) $(nw_condense_SOURCES) $(nw_display_SOURCES) $(nw_distance_SOURCES) $(nw_ed_SOURCES) $(nw_gen_SOURCES) $(nw_indent_SOURCES) $(nw_labels_SOURCES) $(nw_match_SOURCES) $(nw_order_SOURCES) $(nw_prune_SOURCES) $(nw_rename_SOURCES) $(nw_reroot_SOURCES) $(nw_support_SOURCES) $(nw_topology_SOURCES)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .l .o .obj .y
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
newick_parser.h: newick_parser.c
	@if test ! -f $@; then \
	  rm -f newick_parser.c; \
	  $(MAKE) newick_parser.c; \
	else :; fi
nw_clade$(EXEEXT): $(nw_clade_OBJECTS) $(nw_clade_DEPENDENCIES) 
	@rm -f nw_clade$(EXEEXT)
	$(LINK) $(nw_clade_LDFLAGS) $(nw_clade_OBJECTS) $(nw_clade_LDADD) $(LIBS)
newick_parser.h: newick_parser.c
	@if test ! -f $@; then \
	  rm -f newick_parser.c; \
	  $(MAKE) newick_parser.c; \
	else :; fi
nw_condense$(EXEEXT): $(nw_condense_OBJECTS) $(nw_condense_DEPENDENCIES) 
	@rm -f nw_condense$(EXEEXT)
	$(LINK) $(nw_condense_LDFLAGS) $(nw_condense_OBJECTS) $(nw_condense_LDADD) $(LIBS)
newick_parser.h: newick_parser.c
	@if test ! -f $@; then \
	  rm -f newick_parser.c; \
	  $(MAKE) newick_parser.c; \
	else :; fi
nw_display$(EXEEXT): $(nw_display_OBJECTS) $(nw_display_DEPENDENCIES) 
	@rm -f nw_display$(EXEEXT)
	$(LINK) $(nw_display_LDFLAGS) $(nw_display_OBJECTS) $(nw_display_LDADD) $(LIBS)
newick_parser.h: newick_parser.c
	@if test ! -f $@; then \
	  rm -f newick_parser.c; \
	  $(MAKE) newick_parser.c; \
	else :; fi
nw_distance$(EXEEXT): $(nw_distance_OBJECTS) $(nw_distance_DEPENDENCIES) 
	@rm -f nw_distance$(EXEEXT)
	$(LINK) $(nw_distance_LDFLAGS) $(nw_distance_OBJECTS) $(nw_distance_LDADD) $(LIBS)
newick_parser.h: newick_parser.c
	@if test ! -f $@; then \
	  rm -f newick_parser.c; \
	  $(MAKE) newick_parser.c; \
	else :; fi
address_parser.h: address_parser.c
	@if test ! -f $@; then \
	  rm -f address_parser.c; \
	  $(MAKE) address_parser.c; \
	else :; fi
nw_ed$(EXEEXT): $(nw_ed_OBJECTS) $(nw_ed_DEPENDENCIES) 
	@rm -f nw_ed$(EXEEXT)
	$(LINK) $(nw_ed_LDFLAGS) $(nw_ed_OBJECTS) $(nw_ed_LDADD) $(LIBS)
newick_parser.h: newick_parser.c
	@if test ! -f $@; then \
	  rm -f newick_parser.c; \
	  $(MAKE) newick_parser.c; \
	else :; fi
nw_gen$(EXEEXT): $(nw_gen_OBJECTS) $(nw_gen_DEPENDENCIES) 
	@rm -f nw_gen$(EXEEXT)
	$(LINK) $(nw_gen_LDFLAGS) $(nw_gen_OBJECTS) $(nw_gen_LDADD) $(LIBS)
nw_indent$(EXEEXT): $(nw_indent_OBJECTS) $(nw_indent_DEPENDENCIES) 
	@rm -f nw_indent$(EXEEXT)
	$(LINK) $(nw_indent_LDFLAGS) $(nw_indent_OBJECTS) $(nw_indent_LDADD) $(LIBS)
newick_parser.h: newick_parser.c
	@if test ! -f $@; then \
	  rm -f newick_parser.c; \
	  $(MAKE) newick_parser.c; \
	else :; fi
nw_labels$(EXEEXT): $(nw_labels_OBJECTS) $(nw_labels_DEPENDENCIES) 
	@rm -f nw_labels$(EXEEXT)
	$(LINK) $(nw_labels_LDFLAGS) $(nw_labels_OBJECTS) $(nw_labels_LDADD) $(LIBS)
newick_parser.h: newick_parser.c
	@if test ! -f $@; then \
	  rm -f newick_parser.c; \
	  $(MAKE) newick_parser.c; \
	else :; fi
nw_match$(EXEEXT): $(nw_match_OBJECTS) $(nw_match_DEPENDENCIES) 
	@rm -f nw_match$(EXEEXT)
	$(LINK) $(nw_match_LDFLAGS) $(nw_match_OBJECTS) $(nw_match_LDADD) $(LIBS)
newick_parser.h: newick_parser.c
	@if test ! -f $@; then \
	  rm -f newick_parser.c; \
	  $(MAKE) newick_parser.c; \
	else :; fi
nw_order$(EXEEXT): $(nw_order_OBJECTS) $(nw_order_DEPENDENCIES) 
	@rm -f nw_order$(EXEEXT)
	$(LINK) $(nw_order_LDFLAGS) $(nw_order_OBJECTS) $(nw_order_LDADD) $(LIBS)
newick_parser.h: newick_parser.c
	@if test ! -f $@; then \
	  rm -f newick_parser.c; \
	  $(MAKE) newick_parser.c; \
	else :; fi
nw_prune$(EXEEXT): $(nw_prune_OBJECTS) $(nw_prune_DEPENDENCIES) 
	@rm -f nw_prune$(EXEEXT)
	$(LINK) $(nw_prune_LDFLAGS) $(nw_prune_OBJECTS) $(nw_prune_LDADD) $(LIBS)
newick_parser.h: newick_parser.c
	@if test ! -f $@; then \
	  rm -f newick_parser.c; \
	  $(MAKE) newick_parser.c; \
	else :; fi
nw_rename$(EXEEXT): $(nw_rename_OBJECTS) $(nw_rename_DEPENDENCIES) 
	@rm -f nw_rename$(EXEEXT)
	$(LINK) $(nw_rename_LDFLAGS) $(nw_rename_OBJECTS) $(nw_rename_LDADD) $(LIBS)
newick_parser.h: newick_parser.c
	@if test ! -f $@; then \
	  rm -f newick_parser.c; \
	  $(MAKE) newick_parser.c; \
	else :; fi
nw_reroot$(EXEEXT): $(nw_reroot_OBJECTS) $(nw_reroot_DEPENDENCIES) 
	@rm -f nw_reroot$(EXEEXT)
	$(LINK) $(nw_reroot_LDFLAGS) $(nw_reroot_OBJECTS) $(nw_reroot_LDADD) $(LIBS)
newick_parser.h: newick_parser.c
	@if test ! -f $@; then \
	  rm -f newick_parser.c; \
	  $(MAKE) newick_parser.c; \
	else :; fi
nw_support$(EXEEXT): $(nw_support_OBJECTS) $(nw_support_DEPENDENCIES) 
	@rm -f nw_support$(EXEEXT)
	$(LINK) $(nw_support_LDFLAGS) $(nw_support_OBJECTS) $(nw_support_LDADD) $(LIBS)
newick_parser.h: newick_parser.c
	@if test ! -f $@; then \
	  rm -f newick_parser.c; \
	  $(MAKE) newick_parser.c; \
	else :; fi
nw_topology$(EXEEXT): $(nw_topology_OBJECTS) $(nw_topology_DEPENDENCIES) 
	@rm -f nw_topology$(EXEEXT)
	$(LINK) $(nw_topology_LDFLAGS) $(nw_topology_OBJECTS) $(nw_topology_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/address_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/address_scanner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/canvas.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/concat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/condense.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/display.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/distance.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/enode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/generate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/indent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/indent_lex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/labels.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lca.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/link.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/match.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/newick_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/newick_scanner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/node_pos_alloc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/node_set.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nodemap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/order.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/order_tree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prune.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/readline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/redge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rename.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reroot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rnode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rnode_iterator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_node_pos.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/subtree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/support.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svg_graph.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/text_graph.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/to_newick.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/topology.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tree_editor.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `cygpath -w $<`
CCDEPMODE = @CCDEPMODE@

.l.c:
	$(SHELL) $(YLWRAP) `test -f '$<' || echo '$(srcdir)/'`$< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

.y.c:
	$(SHELL) $(YLWRAP) `test -f '$<' || echo '$(srcdir)/'`$< y.tab.c $@ y.tab.h $*.h y.output $*.output -- $(YACCCOMPILE)
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "newick_parser.hnewick_parser.cnewick_scanner.cnewick_parser.hnewick_parser.cnewick_scanner.cnewick_parser.hnewick_parser.cnewick_scanner.cnewick_parser.hnewick_parser.cnewick_scanner.cnewick_parser.hnewick_parser.cnewick_scanner.caddress_scanner.caddress_parser.haddress_parser.cnewick_parser.hnewick_parser.cnewick_scanner.cindent_lex.cnewick_parser.hnewick_parser.cnewick_scanner.cnewick_parser.hnewick_parser.cnewick_scanner.cnewick_parser.hnewick_parser.cnewick_scanner.cnewick_parser.hnewick_parser.cnewick_scanner.cnewick_parser.hnewick_parser.cnewick_scanner.cnewick_parser.hnewick_parser.cnewick_scanner.cnewick_parser.hnewick_parser.cnewick_scanner.cnewick_parser.hnewick_parser.cnewick_scanner.c$(BUILT_SOURCES)" || rm -f newick_parser.h newick_parser.c newick_scanner.c newick_parser.h newick_parser.c newick_scanner.c newick_parser.h newick_parser.c newick_scanner.c newick_parser.h newick_parser.c newick_scanner.c newick_parser.h newick_parser.c newick_scanner.c address_scanner.c address_parser.h address_parser.c newick_parser.h newick_parser.c newick_scanner.c indent_lex.c newick_parser.h newick_parser.c newick_scanner.c newick_parser.h newick_parser.c newick_scanner.c newick_parser.h newick_parser.c newick_scanner.c newick_parser.h newick_parser.c newick_scanner.c newick_parser.h newick_parser.c newick_scanner.c newick_parser.h newick_parser.c newick_scanner.c newick_parser.h newick_parser.c newick_scanner.c newick_parser.h newick_parser.c newick_scanner.c $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-local mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-local distclean distclean-compile \
	distclean-depend distclean-generic distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am


newick_scanner.c: newick_scanner.l
	flex -onewick_scanner.c newick_scanner.l 

address_scanner.c: address_scanner.l
	flex -oaddress_scanner.c address_scanner.l 

# Removes automatically generated C code (Lex & YACC)
#
clean-local:
	$(RM) newick_scanner.c newick_parser.c newick_parser.h \
	address_scanner.c address_parser.c address_parser.h  \
	indent_lex.c
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
